@page "/Generator"
@using Models
@inject VismaBlazor.HttpClientPost HttpClientPost
@inject NavigationManager NavigationManager
@using Radzen.Blazor;
@using Radzen;
@using System;
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [StreamRendering]


<PageTitle>Generator</PageTitle>


<div>
    <RadzenCard class="text-center ">
        <div class="row">
            <div class="col-md-12 ">
                <h3 class="fw-bold">Generator</h3>
                <div class="px-4">
                <RadzenCard style="font-size:17px; font-weight:500">
                    <p>Skriv i feltet under for manuell NøkkelID</p>
                    </RadzenCard>
                </div>
                <div class="row">

                    <div class="p-4">
                        <RadzenCard class="">
                            <textarea value="@flereids" @onchange="@((args) => flereids = args?.Value?.ToString())" class=" border-1 border rounded-3 shadow-sm w-100 h-100 " rows="8" style="resize:none"   />
                        </RadzenCard>
                    </div>
                    <div class="px-4">
                        <RadzenCard style="font-size:17px; font-weight:500">
                   
                    <p>Vis du vil genere data uten nøkkelID skriv antall i feltet under </p>
                        </RadzenCard>
                    </div>
                    <div class="col-md-12 p-2">
                        <RadzenTextBox Value="@value" Change="@OnChange" Placeholder="Skriv antall brukere" style="width: 150px" />
                    </div>

                    <div class="col-md-12 p-2 text-center">
                        
                         <RadzenButton Text="Generer" ButtonStyle="ButtonStyle.Success" Click="@SendId" style="width: 50%" />
                       
                    </div>
                </div>
            </div>
        </div>
    </RadzenCard>
</div>

@if (load == true)
{
    <RadzenAlert Text="Laster inn data" Severity="Severity.Info" AlertStyle="AlertStyle.Info" />
}

@if (error == true)
{
    <RadzenAlert Text="Vennligst skriv i ett av feltene" Severity="Severity.Warning" AlertStyle="AlertStyle.Danger" />
}

@code {


    private int ids;
    private string? flereids { get; set; }
    private string? value;
    private Boolean? error { get; set; }
    private Boolean load { get; set; }
    
    



    void OnChange(string value)
    {
        ids = int.Parse(value);

    }

    public IdList[]? idobject;

    



    private async Task SendId()
    {

        if (ids != 0 && flereids != null)
        {
            load = true;
            await HttpClientPost.Post(ids);
            await HttpClientPost.PostFlereId(flereids);
            
            NavigationManager.NavigateTo("/Resultat");
        }

        else if (ids != 0)
        {
            load = true;
            await HttpClientPost.Post(ids);  
            
            NavigationManager.NavigateTo("/Resultat");
        }

        else if (flereids != null)
        {
            load = true;
            await HttpClientPost.PostFlereId(flereids);
            
            NavigationManager.NavigateTo("/Resultat");
        }
   
        else 
        {
            await HttpClientPost.PostFlereId(flereids);
            error = true;
        }

      
    }

   

}
