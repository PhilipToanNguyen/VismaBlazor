@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using Radzen
@using Radzen.Blazor

<RadzenLayout>
    <RadzenHeader class="w-100">
        <div class="flex-row ">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
            

            
            <RadzenLabel Text="Visma" class="p-4" />

            <RadzenCard>
                <div class="text-black text-uppercase fw-bold fs-6">
                @user
                </div>
                </RadzenCard>

            </RadzenStack>
        </div>
    </RadzenHeader>
     
    <RadzenSidebar Responsive="false" Style="width: max-content" @bind-Expanded="@sidebarExpanded">
        <RadzenPanelMenu DisplayStyle="@(sidebarExpanded ? MenuItemDisplayStyle.IconAndText : MenuItemDisplayStyle.Icon)" ShowArrow="false">

      
            <RadzenPanelMenuItem Text="Import" Icon="file_upload" Path="" />
            <RadzenPanelMenuItem Text="Generator" Icon="create" Path="Generator" />
            <RadzenPanelMenuItem Text="Logg ut" Icon="logout" Path="/Account/Logout" />
           
        </RadzenPanelMenu>
    </RadzenSidebar>

    <RadzenBody>
        <div class="rz-p-4">
           @Body
        </div>
    </RadzenBody>

    <RadzenFooter class="rz-text-align-center" Style ="">
        <RadzenLabel Text="Visma // Gruppe 5 // 2024 " />
    </RadzenFooter>
</RadzenLayout>

@code {
    bool sidebarExpanded = true;

    private string user = "";

    [CascadingParameter]

    private Task<AuthenticationState>? authenticationState { get; set; }
    

    protected override async void OnInitialized()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;

            user = state.User.Identity?.Name ?? "";

        }

        await base.OnInitializedAsync();


    }

    

    

}