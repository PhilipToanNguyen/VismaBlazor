@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using Radzen
@using Radzen.Blazor

<RadzenLayout>
    <RadzenHeader class="bg-white rz-p-2">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="">
        <div id="logo" class="">
            <RadzenImage class="" Path="bilder/datagenerator.png" Style="width: 12rem" AlternateText="community" />
       </div>        
        </RadzenStack>
    </RadzenHeader>

    <RadzenSidebar Responsive="false" Style="width: max-content">
        <RadzenPanelMenu DisplayStyle="@(sidebarExpanded ? MenuItemDisplayStyle.IconAndText : MenuItemDisplayStyle.Icon)" ShowArrow="false">
         
            @if (user != string.Empty)
            {
                <RadzenPanel>@user</RadzenPanel>
            }
            else if (user == string.Empty)
            {
                <RadzenPanel> Ikke pålogget</RadzenPanel>
            }
            <RadzenPanelMenuItem Text="Hjem" Icon="home" Path="" />
            <RadzenPanelMenuItem Text="Import" Icon="file_upload" Path="importer" />
            <RadzenPanelMenuItem Text="Generator" Icon="create" Path="generator" />
            <RadzenPanelMenuItem Text="Logg ut" Icon="logout" Path="/account/logout" />
        </RadzenPanelMenu>
    </RadzenSidebar>

    <RadzenBody>
        <div class="rz-p-4">
            @Body
            
        </div>
    </RadzenBody>
</RadzenLayout>

<div>
<RadzenFooter class="rz-text-align-center shadow-lg">
    <RadzenText TextStyle="TextStyle.Overline" class="p-2">Datagenerator ┃ Gruppe 5 ┃ @@2024 </RadzenText>
</RadzenFooter>
</div>

@code {
    bool sidebarExpanded = true;

    private string user = "";

    [CascadingParameter]

    private Task<AuthenticationState>? authenticationState { get; set; }

    //Henter brukernavn fra authenticationState
    protected override async void OnInitialized()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;

            user = state.User.Identity?.Name ?? "";

        }
        await base.OnInitializedAsync();
    }
        /*KILDER
         * 
        https://blazor.radzen.com/layout for Sidebar

         */
}